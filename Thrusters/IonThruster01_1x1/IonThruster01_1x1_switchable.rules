Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/IonThruster01_1x1"
	IconNameKey = "Parts/IonThruster01_1x1_Icon"
	ID = SW.IonThruster01_1x1_switchable
	OtherIDs = ["IonThruster01_1x1","SW.IonThruster01_1x1"]
	EditorGroup = "Flight"
	DescriptionKey = "Parts/IonThrusterDesc"
	Resources
	[
		[steel, 8]
		[coil, 2]
	]  //Cost = 1000
	TypeCategories = [thruster, uses_power]
	Size = [1, 2]
	PhysicalRect = [0, 0, 1, 1]
	SaveRect = &PhysicalRect
	BoundingRectType = Physical
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "thrusters"
	MaxHealth = 750
	ProhibitBelow = 3
	ThrusterForce = 450
	ThrustIncreaseTime = 0
	ThrustRecoveryTime = 0
	FuelUsage = 40
	ReceivableBuffs : ^/0/ReceivableBuffs [Engine]
	AllowedDoorLocations
	[
		[0, -1]
		[1, 0]
		[0, 1]
		[-1, 0]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [21.33, 42.66]
	}
	Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage]
			Mode = All
		}
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}
		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 1000
		}
		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 1
		}
		EngineBuffToggle
		{
			Type = BuffToggle
			BuffType = Engine
		}
		ToggledBatteryConsumer
		{
			Type = ToggledComponents
			Toggle = EngineBuffToggle
			Invert = true
			IncludeInBlueprints = true
			Components
			{
				BatteryConsumer
				{
					Type = ResourceConsumer
					ResourceType = battery
					Storage = BatteryStorage
					DefaultPriority = &/PRIORITIES/Thruster_Supply
					ResupplyThreshold = 500
					OperationalToggle = PowerToggle
					ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
				}
			}
		}
		
		ThrusterEffectAmountType
		{
			Type = UIToggle
			ToggleID = "SW.thruster_effect_amount_type"
			Default = 0
			AlwaysAllowInBuildMode = true
		}
		
		ThrusterEffectColorType
		{
			Type = UIToggle
			ToggleID = "SW.thruster_effect_color_type"
			Default = 0
			AlwaysAllowInBuildMode = true
		}

		RedThrusterToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectColorType
			OnMode = 0
		}
		RedThrusterComponents
		{
			Type = ToggledComponents
			Toggle = RedThrusterToggle
			IncludeInBlueprints = true
			Components = &<thruster_red.rules>/Components
		}

		BlueThrusterToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectColorType
			OnMode = 1
		}
		BlueThrusterComponents
		{
			Type = ToggledComponents
			Toggle = BlueThrusterToggle
			IncludeInBlueprints = true
			Components = &<thruster_blue.rules>/Components
		}

		YellowThrusterToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectColorType
			OnMode = 2
		}
		YellowThrusterComponents
		{
			Type = ToggledComponents
			Toggle = YellowThrusterToggle
			IncludeInBlueprints = true
			Components = &<thruster_yellow.rules>/Components
		}
		
		PurpleThrusterToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectColorType
			OnMode = 3
		}
		PurpleThrusterComponents
		{
			Type = ToggledComponents
			Toggle = PurpleThrusterToggle
			IncludeInBlueprints = true
			Components = &<thruster_purple.rules>/Components
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational

			Location = [0.5, 0.5]
			Floor
			{
				Layer = "floors"
				Offset = [0, .5]
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 2]
					}
					{
						File = "floor_33.png"
						Size = [1, 2]
					}
					{
						File = "floor_66.png"
						Size = [1, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads on1.png"
							"doodads on2.png"
							"doodads on3.png"
							"doodads on4.png"
							"doodads on5.png"
							"doodads on6.png"
							"doodads on7.png"
							"doodads on8.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.075
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads off.png"
						Size = [1, 1]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				Offset = [0, .5]
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1, 2]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
					{
						File = "walls_33.png"
						Size = [1, 1]
					}
					{
						File = "walls_66.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [1, 1]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_66.png"
						Size = [1, 1]
					}
				]
			}
			NonOperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_66.png"
						Size = [1, 1]
					}
				]
			}
		}
		BatterySprites
		{
			Type = ResourceSprites
			Location = [.5, 0.5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			HasZeroResourceSprite = true
			ResourceLevels
			[
				{
					File = "batteries 0.png"
					Size = [1, 1]
				}
				{
					File = "batteries 1.png"
					Size = [1, 1]
				}
			]
		}
		MainThruster
		{
			Type = Thruster
			OperationalToggle = IsOperational,
			Location = [0.5, 1.225]// Relative to upper-left corner of unrotated part.
			Rotation = 90d// Relative to unrotated part.
			Force = &../../ThrusterForce
			MinActivation = 0
			MaxActivation = { BaseValue=1; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = 0
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelStorage = BatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}
		LateralThruster : MainThruster
		{
			Rotation = 0d
			MinActivation = -0.08
			MaxActivation = 0.08
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			AllowAutoFire = false
		}
		ReverseThruster
		{
			Type = Thruster
			OperationalToggle = IsOperational,
			Location = [0.5, 0]
			Rotation = -90d
			Force = (&../../ThrusterForce)/2
			MinActivation = 0
			MaxActivation = { BaseValue=0.35; BuffType=Engine; BuffMode=Multiply; }	//0.345
			MinUncommandedActivation = 0
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelStorage = BatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}

		ThrustEffectsSound
		{
			Type = ContinuousEffects
			ChainedTo = MainThruster
			FactorMediaEffectsIntensityWith = MainThruster
			MediaEffects
			[
				: /COMMON_SOUNDS/ThrusterRumble
				{
					Volume = .125
					Speed = 1.5
					MaxConcurrentVolume = .25
				}
			]
		}
		
		BurstTrigger
		{
			Type = ThresholdTrigger
			AmountFrom = MainThruster
			MinAmount = 0.5
		}

		BurstEffects
		{
			Type = TriggeredEffects
			ChainedTo = MainThruster
			Trigger = BurstTrigger
			FactorMediaEffectsIntensityWith = MainThruster
			AnchorMediaEffects = true
			MediaEffects
			[
				: /COMMON_SOUNDS/ThrusterBurst
				{
					Volume = 0.25
					Speed = 1.5
					MaxConcurrentVolume = 0.5
				}
			]
		}
		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational,
			Location = [.5, .5]
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyed
			Location = [.5, .5]
		}

		ThrusterHum
		{
			Type = ContinuousEffects
			Location = [.5, .5]
			OperationalToggle = IsOperational
			MediaEffects
			[
				: /COMMON_SOUNDS/ThrusterHum
				{
					Volume = .05
					Speed = 1.5
					MaxConcurrentVolume = 1
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [0.5, 0.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type=BlueprintSprite
			File = "blueprints.png"
			Size = [1, 2]
			//Offset = [0, 0]
		}
	}

	Stats
	{
		ThrusterForce = &~/Part/ThrusterForce
		ThrusterRampUp = &~/Part/ThrustIncreaseTime
		ThrusterPowerUsage = (&~/Part/FuelUsage) / 1000
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&ThrusterPowerUsage) / 2
		RecCrew = (&RecPower) * 4
	}
}
