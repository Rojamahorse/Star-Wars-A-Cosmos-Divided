/* ----------------------------------------------------------------------------

Introduction: SW:ACD 0.3.7

Author : Lafiel
Description:
Currently prototyping: just solar armor panel with thruster

Based and for the Imperial Raider Corvetter

Versions:

 o 1.0 Cosmoteer 0.15.14

---------------------------------------------------------------------------- */ 
Part : <solarpanel_trapezoid_spike04_base.txt>/Part
{
	NameKey = "Parts/SolarpanelTrapezoidSpike04L"
	IconNameKey = "Parts/SolarpanelTrapezoidSpike04LIcon"
	ID = "SW.solarpanel_trapezoid_spike04_L"
	DescriptionKey = "Parts/SolarpanelTrapezoidSpike04LDesc"

	Cost = 4200

	UsePartWhenFlipped = SW.solarpanel_trapezoid_spike04_R

//	AllowedDoorLocations

	FlipHRotate = [0, 3, 2, 1]
	FlipVRotate = [2, 1, 0, 3]

	CustomCollider
	[
		[123/64, -828/64]
		[188/64, -828/64]
		[3, -405/64]
		[175/64, 3]
		[144/64, 529/64]
		[1, 9]
		[-153/64, 396/64]
		[-123/64, -3/64]
	]

	EditorIcon
	{
		Texture
		{
			File = "solarpanel_trapezoid_spike03.png"
			SampleMode = Linear
		}
		Size = [21, 92]
	}
	
	Components : ^/0/Components, <thruster_large_3way2L.txt>/Components
	{
		SolarPanelGraphics
		{
			Type = Graphics
			Location = [.5, .5]
			Floor
			{
				Layer = "structure"
				Offset = [-12/64, -158/64] //[-76/64, -222/64] //-76,-222
				DamageLevels
				[
					{
						File = "solarpanel_trapezoid_spike03.png"
						Size = [345/64, 1404/64]
					}
				]
			}
			Walls
			{
				Layer = "roof_turrets"
				Offset = [-12/64, -158/64] //-76,-222
				DamageLevels
				[
					{
						File = "solarpanel_trapezoid_spike03.png"
						Size = [345/64, 1404/64]
					}
				]
			}
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints_solarpanel_trapezoid_spike03.png"
			Size = [345/64, 1404/64]
			Offset = [-76/64, -222/64] //-76,-222
		}
/*
		BlueprintsGun
		{
			Type = BlueprintSprite
			File = "blueprints_tie_defender_gun2.png"
			Size = [1, 2]
			Offset = [-1.078125, -7.625] //-69,-488
		}

		BlueprintsRed
		{
			Type = BlueprintSprite
			File = "blueprintsL.png"
			Size = [2, 1]
			Offset = [-0.5, 0]

			ShowOnlyInToggleMode
			{
				ToggleID = SW.blasterlaser_type
				Mode = 0
			}
		}
		BlueprintsBlue
		{
			Type = BlueprintSprite
			File = "blueprintsL.png"
			Size = [2, 1]
			Offset = [-0.5, 0]
			ShowOnlyInToggleMode
			{
				ToggleID = SW.blasterlaser_type
				Mode = 1
			}
		}
		BlueprintsGreen
		{
			Type = BlueprintSprite
			File = "blueprintsL.png"
			Size = [2, 1]
			Offset = [-0.5, 0]

			ShowOnlyInToggleMode
			{
				ToggleID = SW.blasterlaser_type
				Mode = 2
			}
		}
*/

	}

/*
	Stats
	{
		CrewRequired = &../Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxAmmo) / 1000

		RecPower = (&PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4

		ROF = 1 / (&<red_fixedlaserL.txt>/Components/Turret/FireInterval)
		Range = &<red_fixedlaserL.txt>/Components/BulletEmitter/Bullet/Range
		Arc = deg(&<red_fixedlaserL.txt>/Components/Turret/FiringArc)
		TurretSpeed = deg(&<red_fixedlaserL.txt>/Components/Turret/RotateSpeed)
		ShotSpeed = &<red_fixedlaserL.txt>/Components/BulletEmitter/Bullet/Speed
		ShotHP = &<red_fixedlaserL.txt>/Components/BulletEmitter/Bullet/Components/Targetable/Health
		PowerPerShot = (&<red_fixedlaserL.txt>/Components/BulletEmitter/AmmoUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * 1 / (&<red_fixedlaserL.txt>/Components/Turret/FireInterval)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
	}
	StatsByCategory
	[
		&<red_fixedlaserL.txt>/LaserStats
		&<blue_fixedlaserL.txt>/LaserStats
		&<green_fixedlaserL.txt>/LaserStats
	]
*/
}

