/* ----------------------------------------------------------------------------

Introduction: SW:ACD 0.3.7

Author : Lafiel
Description:
Currently prototyping: No color changing atm but code is there for adding

Ion cannon version seen on Tie Defender on the top = inside Solar panels

Versions:

 o 1.0 Cosmoteer 0.15.14

---------------------------------------------------------------------------- */ 
Part : <solarpanel_trapezoid_spike02_base.txt>/Part
{
	NameKey = "Parts/SolarpanelTrapezoidSpike02IonR"
	IconNameKey = "Parts/SolarpanelTrapezoidSpike02IonRIcon"
	ID = "SW.solarpanel_trapezoid_spike02_ion_R"
	DescriptionKey = "Parts/SolarpanelTrapezoidSpike02IonRDesc"

	Cost = 5000

	UsePartWhenFlipped = SW.solarpanel_trapezoid_spike02_ion_L

//	AllowedDoorLocations

	FlipHRotate = [0, 3, 2, 1]
	FlipVRotate = [2, 1, 0, 3]

	CustomCollider
	[
		[20/64, -346/64]
		[2, 124/64]
		[2, 7/64]
		[20/64, 205/64]
	]

	EditorIcon
	{
		Texture
		{
			File = "icon_ion.png"
			SampleMode = Linear
		}
		UVRect
		{
			Left = 1
			Right = 0
			Top = 0
			Bottom = 1
		}
		Size = [21, 92]
	}
	
	Components : ^/0/Components, <thruster_small_3wayR.txt>/Components, <blue_fixed_ionR.txt>/Components
	{
		SolarPanelGraphics
		{
			Type = Graphics
			Location = [.5, .5]
			Floor
			{
				Layer = "structure"
				Offset = [0.5, -1.6875] //32,-108
				DamageLevels
				[
					{
						File = "tie_defender_wing.png"
						Size = [2, 9]
						MirrorU = true
					}
				]
			}
			Walls
			{
				Layer = "roof_turrets"
				Offset = [0.5, -1.6875] //32,-108
				DamageLevels
				[
					{
						File = "tie_defender_wing.png"
						Size = [2, 9]
						MirrorU = true
					}
				]
			}
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints_tie_defender_wing.png"
			Size = [2, 9]
			Offset = [0.5, -1.6875] //-32,-108
			MirrorU = true
		}
		BlueprintsGun
		{
			Type = BlueprintSprite
			File = "blueprints_tie_defender_gun1.png"
			Size = [1, 5]
			Offset = [-0.421875, -4] //-27,256
			MirrorU = true
		}
/*
		BlueprintsRed
		{
			Type = BlueprintSprite
			File = "blueprintsR.png"
			Size = [2, 1]
			Offset = [0.5, 0]

			ShowOnlyInToggleMode
			{
				ToggleID = SW.blasterlaser_type
				Mode = 0
			}
		}
		BlueprintsBlue
		{
			Type = BlueprintSprite
			File = "blueprintsR.png"
			Size = [2, 1]
			Offset = [0.5, 0]
			ShowOnlyInToggleMode
			{
				ToggleID = SW.blasterlaser_type
				Mode = 1
			}
		}
		BlueprintsGreen
		{
			Type = BlueprintSprite
			File = "blueprintsR.png"
			Size = [2, 1]
			Offset = [0.5, 0]

			ShowOnlyInToggleMode
			{
				ToggleID = SW.blasterlaser_type
				Mode = 2
			}
		}
*/
	}

/*
	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxAmmo) / 1000

		RecPower = (&PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4

		ROF = 1 / (&<red_fixedlaserR.txt>/Components/Turret/FireInterval)
		Range = &<red_fixedlaserR.txt>/Components/BulletEmitter/Bullet/Range
		Arc = deg(&<red_fixedlaserR.txt>/Components/Turret/FiringArc)
		TurretSpeed = deg(&<red_fixedlaserR.txt>/Components/Turret/RotateSpeed)
		ShotSpeed = &<red_fixedlaserR.txt>/Components/BulletEmitter/Bullet/Speed
		ShotHP = &<red_fixedlaserR.txt>/Components/BulletEmitter/Bullet/Components/Targetable/Health
		PowerPerShot = (&<red_fixedlaserR.txt>/Components/BulletEmitter/AmmoUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * 1 / (&<red_fixedlaserR.txt>/Components/Turret/FireInterval)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
	}
	StatsByCategory
	[
		&<red_fixedlaserR.txt>/LaserStats
		&<blue_fixedlaserR.txt>/LaserStats
		&<green_fixedlaserR.txt>/LaserStats
	]
*/
}
