Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/FalconLaserCannon"
	IconNameKey = "Parts/FalconLaserCannonIcon"
	ID = SW.falcon_laser_cannon
	OtherIDs = ["quad_laser_cannon"]
	EditorGroup = "WeaponsEnergy"
	DescriptionKey = "Parts/FalconLaserCannonDesc"
	Resources
	[
		[steel, 8] //
	]  //Cost = 7000
	AIValueFactor = 1

	TypeCategories = [weapon, uses_power,is_crewed]
	Size = [2, 2]
	SelectionPriority = 1.0
	SelectionTypeByRotation = true
	SelectionTypeID = "cannons"
	MaxHealth = 5200
	InitialPenetrationResistance = 6
	PenetrationRectType = Normal
	AllowedDoorLocations
	[
		[-1, 1]
		[2, 1]
        [1, 2]
        [0, 2]
	]

	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [40, 60]
	}
	Components
	{
		
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}

		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 3000
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 1000
			OperatinalToggle = PowerToggle
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [1, 1]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 2]
					}
					{
						File = "floor_33.png"
						Size = [2, 2]
					}
					{
						File = "floor_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [2, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"console on1.png"
							"console on2.png"
							"console on3.png"
						]
						Size = [2, 2]
						//Offset = [0, 0]//-0.67
						AnimationInterval = 0.50
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "console off.png"
						Size = [2, 2]
						//Offset = [0, 0]//-0.67
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 2]
					}
					{
						File = "walls_33.png"
						Size = [2, 2]
					}
					{
						File = "walls_66.png"
						Size = [2, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [2, 2]
					}
					{
						File = "roof_50.png"
						NormalsFile = "roof_normals_50.png"
						Size = [2, 2]
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_66.png"
						Size = [2, 2]
					}
				]
			}
			NonOperationalRoofWindows = &OperationalRoofWindows
		}

		Turret
		{
			Type = TurretWeapon
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			Location = [1, 1]
			Rotation = -90d
			FireInterval = 1
			FiringArc = 220d
			RotateSpeed = 75d
			FireThresholdAngle = 1d
			AIFirepowerRating = 1600
			AllowFireWithBlockedLOS = true
			Emitter = BulletEmitterBase

			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = Turret
		}



		BulletEmitterBase
		{
			Type = BulletEmitter
			ChainedTo = Turret
			FireTrigger 
			GetTargetFrom = Turret
			Location = [1.75, 0]
			OperationalToggle = IsOperational
			Bullet = &/COMMON_SHOTS/redfalconlasercannonshot
			ResourceStorage = BatteryStorage
			ResourcesUsed = 100
			Recoil = 1
		}

		BulletEmitterLeftUpper : BulletEmitterBase
		{
			Type = BulletEmitter
			FireTrigger = Turret
			Location = [1.25, -0.09]//0.25
		}

		BulletEmitterRightUpper : BulletEmitterBase
		{
			Type = BulletEmitter
			FireTrigger = Turret
			Location = [1.25, 0.09]
		}

		BulletEmitterLeftUnder : BulletEmitterBase
		{
			Type = BulletEmitter
			FireTrigger = Turret
			Location = [1.25, -0.09]
		}

		BulletEmitterRightUnder : BulletEmitterBase
		{
			Type = BulletEmitter
			FireTrigger = Turret
			Location = [1.25, 0.09]
		}

		ChargeEffectLeftUpper
		{
			Type = TriggeredEffects
			ChainedTo = BulletEmitterLeftUpper
			Trigger = BulletEmitterLeftUpper
			AnchorMediaEffects = true
		
			MediaEffects
			[
				&/COMMON_SOUNDS/LaserRecharge
			]
		}

		ChargeEffectRightUpper : ChargeEffectLeftUpper
		{
			ChainedTo = BulletEmitterRightUpper
			Trigger = BulletEmitterRightUpper
		}

		ChargeEffectLeftUnder : ChargeEffectLeftUpper
		{
			ChainedTo = BulletEmitterLeftUnder
			Trigger = BulletEmitterLeftUnder
		}

		ChargeEffectRightUnder : ChargeEffectLeftUpper
		{
			ChainedTo = BulletEmitterRightUnder
			Trigger = BulletEmitterRightUnder
		}

		FireEffectLeftUpper
		{
			Type = TriggeredEffects
			ChainedTo = BulletEmitterLeftUpper
			Trigger = BulletEmitterLeftUpper
			AnchorMediaEffects = true
	
			MediaEffects
			[
				&/COMMON_PARTICLES/SmallRedLaserShoot
	
				&/COMMON_SOUNDS/FalconShot
			]
		}

		FireEffectRightUpper : FireEffectLeftUpper
		{
			ChainedTo = BulletEmitterRightUpper
			Trigger = BulletEmitterRightUpper
		}

		FireEffectLeftUnder : FireEffectLeftUpper
		{
			ChainedTo = BulletEmitterLeftUnder
			Trigger = BulletEmitterLeftUnder
		}

		FireEffectRightUnder : FireEffectLeftUpper
		{
			ChainedTo = BulletEmitterRightUnder
			Trigger = BulletEmitterRightUnder
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [0.55, 0.6]
			Rotation = 180d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [1.45, 0.6]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				[0.55, 0.5]
				[1.45, 0.5]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}

		TurretCollider
		{
			Type = CircleCollider
			ChainedTo = Turret
			Radius = .8
			Density = 1.5
		}

		BarrelSprite
		{
			Type = Sprite
			ChainedTo = Turret
			Location = [0.20, 0]
			Rotation = 90d
			Layer = "roof_doodads"
			ResetAnimationTrigger = Turret
			AtlasSprite
			{
				AnimationFiles
				[
					"icon.png"
				]
				Size = [1, 2]
				AnimationInterval = 0.0625
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [1, 1]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [2, 2]
				}
				{
					File = "batteries2.png"
					Size = [2, 2]
				}
				{
					File = "batteries3.png"
					Size = [2, 2]
				}
				{
					File = "batteries4.png"
					Size = [2, 2]
				}
				{
					File = "batteries5.png"
					Size = [2, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational,
			Location = [1, 1]
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 1]

			FactorHitEffectsWith = BatteryStorage
			HitEffects
			[
				{
					Type = AreaDamage
					Damage = 0
					Radius = 2
					Delay = .05
					Filter
					{
						Friendlies = true
						OperationalHealth = true
						StructuralHealth = false
					}
				}
				{
					Type = AreaDamage
					Damage = 0
					Radius = 2
					Delay = .05
					Filter
					{
						Friendlies = true
						OperationalHealth = false
						StructuralHealth = true
					}
				}
				{
					Type = AreaFires
					FireChancePerTile = .1
					Radius = 4
					Falloff = 0
					Delay = .05
					Filter
                    {
                        Friendlies = true
                    }
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}
		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 2]
		}
	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = &../StatsByCategory/0/Stats/PowerPerSecond
		RecCrew = (&CrewRequired) + (&RecPower) * 4

		ROF = 4 * (&~/Part/Components/Turret/FireInterval)
		Range = &~/Part/Components/BulletEmitterBase/Bullet/Range
		Arc = deg(&~/Part/Components/Turret/FiringArc)
		TurretSpeed = deg(&~/Part/Components/Turret/RotateSpeed)
	}

	StatsByCategory
	[
		{
			NameKey = "StatCategories/FalconLaserCannonshot"
			Stats
			{
				ShieldDamagePerShot = &~/Part/Components/BulletEmitterBase/Bullet/Components/Hit/HitShield/HitEffects/0/Damage
				ShieldDamagePerSecond = (&ShieldDamagePerShot) * (&~/Part/Stats/ROF)
				ShieldDamage = [&../ShieldDamagePerShot, &../ShieldDamagePerSecond]
				DamagePerShot = &~/Part/Components/BulletEmitterBase/Bullet/Components/Hit/HitOperational/HitEffects/0/Damage
				DamagePerSecond = (&DamagePerShot) * (&~/Part/Stats/ROF)
				Damage = [&../DamagePerShot, &../DamagePerSecond]
				ShotSpeed = &~/Part/Components/BulletEmitterBase/Bullet/Speed
				ShotHP = &~/Part/Components/BulletEmitterBase/Bullet/Components/Targetable/Health
				PowerPerShot = (&~/Part/Components/BulletEmitterBase/ResourcesUsed) / 1000
				PowerPerSecond = (&PowerPerShot) * (&~/Part/Stats/ROF)
				ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
			}
		}
	]
}
