/* ----------------------------------------------------------------------------

Introduction: SW:ACD 0.3.7

Author : Lafiel
Description:
Currently prototyping

Uses a base file. This file is just the weapon and whatever function it requires.
In order to implement different colored shot you can just link them to sub files with those shots.

Versions:

 o 1.0 Cosmoteer 0.15.12

---------------------------------------------------------------------------- */ 
Part : <turbolaser_huge_base.txt>/Part
{
	NameKey = "Parts/TurbolaserHuge01"
	IconNameKey = "Parts/TurbolaserHuge01Icon"
	ID = SW.turbolaser_huge_01
	DescriptionKey = "Parts/TurbolaserHuge01Desc"
	EditorGroup = "TechI"
	Cost = 130000
	AIValueFactor = 1
	AIValue = (&Cost)
	TypeCategories = [weapon, uses_power, is_crewed]
	RequiresCategories = [bridge1]
	Size = [10, 10]
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "cannons" 
	MaxHealth = 168000
	Density = 1 + (&~/Part/TurretDensity)
	InitialPenetrationResistance = 5
	PenetrationRectType = Normal

	TurretDensity = 2.5

	EditorIcon
	{
		Texture
		{
			File = "icon_huge01.png"
			SampleMode = Linear
		}
		Size = [72, 83]
	}
	Components : ^/0/Components //, &<../SW_weapon_fire_alternate_2.txt>
	{
		Weapon
		{
			Type = TurretWeapon
			Location = [5, 5] // Relative to upper-left corner of unrotated part.
			Rotation = -90d // Relative to unrotated part.
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = 0 // Uses separate fire timer.
			FiringArc = 160d
			RotateSpeed = 45d
			FireThresholdAngle = 1d
			IgnoreSourceShipLOSChecks = true
			HoldTargetAfterCancel = 0.5
			AIFirepowerRating = 6400
			FirePermissionToggle = FireModeToggle //FirePermissionToggle

			Emitter = WeaponEmitterBase

			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = Weapon
		}

		WeaponEmitterBase // Doesn't actually fire; only used for targeting and as a base for the left and right emitters.
		{
			Type = BulletEmitter
			ChainedTo = Weapon
			FireTrigger // none, but field is required
			GetTargetFrom = Weapon
			Location = [0, 0]
			OperationalToggle = IsOperational
			FireDelay = .6
			Bullet = &/COMMON_SHOTS/greenmedlasershot
			AmmoStorage = BatteryStorage
			AmmoUsed = 500
		}
		TurretGraphics
		{
			Type = Graphics
			ChainedTo = Weapon
			Location = [0, 0]
			Rotation = 90d
			//OperationalToggle = IsOperational
			Floor
			{
				Layer = "roof_turrets"
				DamageLevels
				[
					{
						File = "turret[10,10].png"
						Size = [10, 10]
					}
				]
			}
		}
		BarrelGraphics
		{
			Type = Graphics
			ChainedTo = Weapon
			Location = [0, 0]
			Rotation = 90d
			//OperationalToggle = IsOperational
			Floor
			{
				Layer = "roof_turrets"
				Offset = [-1.421875, -5.078125] //[5.078125, -1.421875] //-30,-325 //midwidth122 //366/12
				DamageLevels
				[
					{
						File = "../barrel[1,3]01.png"
						Size = [1, 3]
					}
				]
			}
			Walls : &Floor
			{
				Offset = [1.421875, -5.078125] //[5.078125, 1.421875]
			}
			Roof : &Floor
			{
				Offset = [-2.359375, -5.078125] //[5.078125, -2.359375] //-90,-26 //midwidth122
			}
			OperationalDoodad = &NonOperationalDoodad
			NonOperationalDoodad : &Floor
			{
				Offset = [2.359375, -5.078125] //[5.078125, 2.359375]
			}
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints01.png"
			Size = [10, 10]
		}
	}

/*
	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxAmmo) / 1000

		RecPower = &../StatsByCategory/0/Stats/PowerPerSecond
		RecCrew = (&CrewRequired) + (&RecPower) * 4
	}

	StatsByCategory
	[
		{
			NameKey = "StatCategories/MedGreenLasershot"
			Stats
			{
				DamagePerShot = &~/Part/Components/WeaponEmitter/Bullet/Components/Hit/HitOperational/HitEffects/0/Damage/BaseValue
				DamagePerSecond = (&DamagePerShot) * (&ROF)
				Damage = [&../DamagePerShot, &../DamagePerSecond]
				Penetration = &~/Part/Components/WeaponEmitter/Bullet/Components/Hit/Penetration
				FireChance = (&~/Part/Components/WeaponEmitter/Bullet/Components/Hit/PenetratingOperational/HitEffects/1/FireChance) * 100
				ROF = 1 / (&~/Part/Components/Weapon/FireInterval)
				Range = &~/Part/Components/WeaponEmitter/Bullet/Range/BaseValue
				Arc = deg(&~/Part/Components/Weapon/FiringArc)
				//Spread = deg(&~/Part/Components/WeaponEmitter/Spread/1)
				TurretSpeed = deg(&~/Part/Components/Weapon/RotateSpeed)
				ShotSpeed = &~/Part/Components/WeaponEmitter/Bullet/Speed
//				ShotHP = &~/Part/Components/WeaponEmitter/Bullet/Components/Targetable/Health
				PowerPerShot = (&~/Part/Components/WeaponEmitter/AmmoUsed) / 1000
				PowerPerSecond = (&PowerPerShot) * (&ROF)
				ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
			}
		}
	]

*/

}

