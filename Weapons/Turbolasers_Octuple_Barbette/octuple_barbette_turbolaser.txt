/* ----------------------------------------------------------------------------

Introduction: SW:ACD 0.3.7

Author : Lafiel
Description:
Currently prototyping

It offers synchronized and alternate firing modes.
This requires the inheritance of the firing logic found in SW_weapon_fire_alternate_2.txt (See details).
In alternate fire on each sides the guns are divided in od and even groups and overall mirrored.

The timer component (WeaponTimerBuffProvider) is needed to adjust the timing individually for the weapon.

Versions:

 o 1.0 Cosmoteer 0.15.12

---------------------------------------------------------------------------- */ 
Part : /BASE_PART
{
	NameKey = "Parts/OctupleBarbetteTurbolaser"
	IconNameKey = "Parts/OctupleBarbetteTurbolaserIcon"
	ID = SW.octuple_barbette_turbolaser
	DescriptionKey = "Parts/OctupleBarbetteTurbolaserDesc"
	EditorGroup = "TechI"
	Cost = 130000
	AIValue = &Cost
	TypeCategories = [weapon, uses_power, is_crewed]
	RequiresCategories = [bridge1]
	Size = [8, 8]
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "cannons" 
	MaxHealth = 168000
	Density = 1 + (&~/Part/TurretDensity)
	TurretDensity = 2.0
	InitialPenetrationResistance = 5
	PenetrationRectType = Normal

	AllowedDoorLocations
	[
		[-1, 3]
		[-1, 4]
		[-1, 5]
		[-1, 6]
		[-1, 7]
		[8, 3]
		[8, 4]
		[8, 5]
		[8, 6]
		[8, 7]
		[0, 8]
		[1, 8]
		[2, 8]
		[3, 8]
		[4, 8]
		[5, 8]
		[6, 8]
		[7, 8]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [92, 92]
	}
	Components : ^/0/Components, &<../SW_weapon_fire_alternate_2.txt>, &<graphics.txt>, &<weapon_turbolaser_green.txt>/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, PartCrew, BatteryStorage]
			Mode = All
		}
		
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
		AmmoPrereq
		{
			Type = MultiAmmoStorage
			AmmoType = battery
			AmmoStorages = [BatteryStorage]
			//ToggleOnAmmo = 19001
			//ToggleOffAmmo = 3750
		}
		BatteryStorage
		{
			Type = AmmoStorage
			AmmoType = battery
			MaxAmmo = 20000
			ToggleOnAmmo = 10001
		}
		BatteryConsumer
		{
			Type = AmmoConsumer
			AmmoType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			//AdditionalStorageForJobPriority = [ChargeStorage, ChargeStorage2]
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle

			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
/*
		ChargeStorage
		{
			Type = AmmoStorage
			AmmoType = battery
			MaxAmmo = 8000
			ToggleOnAmmo = 7001
			ToggleOffAmmo = 1250
			DelayBeforeReadyToUse = 0.25
			AnticipateMoreAmmoFrom = ["BatteryStorage"]
		}
		ChargeStorage2 : ChargeStorage
		{
		}
		Charger
		{
			Type = AmmoConverter
			FromStorage = BatteryStorage
			ToStorage = ChargeStorage
			FromQuantity = 500
			ToQuantity = 500
			//DelayTrigger = Turret
			//DelayAfterTrigger = 0.5
			Interval = 0.1
		}
		Charger2 : Charger
		{
			ToStorage = ChargeStorage2
		}
*/

		WeaponTimerBuffProvider
		{
			Type = SelfBuffProvider
			BuffType = SWWeaponTimerBuff
			BuffAmount = 100%
		}

		CrewLocation
		{
			Type = CrewLocation
			Location = [1.546875, 4.09375] //-157,-26
			Rotation = 180d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [2.453125, 4.09375] //-99,-26
			Rotation = 180d
		}
		CrewLocation3
		{
			Type = CrewLocation
			Location = [6.453125, 4.09375]
			Rotation = 180d
		}
		CrewLocation4
		{
			Type = CrewLocation
			Location = [5.546875, 4.09375]
			Rotation = 180d
		}
		CrewLocation5
		{
			Type = CrewLocation
			Location = [3.546875, 6.09375] //-29, 102
			Rotation = 180d
		}
		CrewLocation6
		{
			Type = CrewLocation
			Location = [4.453125, 6.09375]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 6
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [AmmoPrereq, BatteryStorage]
			CrewDestinations
			[
				[2, 6.5]
				[3, 6.5]
				[4, 6.5]
				[5, 6.5]
				[6, 6.5]
				[3.5, 7.5]
			]
			CrewLocations
			[
				CrewLocation
				CrewLocation2
				CrewLocation3
				CrewLocation4
				CrewLocation5
				CrewLocation6
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [4, 4]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [4, 4]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [4, 4]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [2, 2]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [2, 2]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [2, 2]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [8, 8]
		}
	}

//	Stats
//	{
//		CrewRequired = &~/Part/Components/PartCrew/Crew
//		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxAmmo) / 1000
//
//		RecPower = &../StatsByCategory/0/Stats/PowerPerSecond
//		RecCrew = (&CrewRequired) + (&RecPower) * 4
//	}
//
//	StatsByCategory
//	[
//		{
//			NameKey = "StatCategories/MedGreenLasershot"
//			Stats
//			{
//				DamagePerShot = &~/Part/Components/WeaponEmitter/Bullet/Components/Hit/HitOperational/HitEffects/0/Damage/BaseValue
//				DamagePerSecond = (&DamagePerShot) * (&ROF)
//				Damage = [&../DamagePerShot, &../DamagePerSecond]
//				Penetration = &~/Part/Components/WeaponEmitter/Bullet/Components/Hit/Penetration
//				FireChance = (&~/Part/Components/WeaponEmitter/Bullet/Components/Hit/PenetratingOperational/HitEffects/1/FireChance) * 100
//				ROF = 1 / (&~/Part/Components/Weapon/FireInterval)
//				Range = &~/Part/Components/WeaponEmitter/Bullet/Range/BaseValue
//				Arc = deg(&~/Part/Components/Weapon/FiringArc)
//				//Spread = deg(&~/Part/Components/WeaponEmitter/Spread/1)
//				TurretSpeed = deg(&~/Part/Components/Weapon/RotateSpeed)
//				ShotSpeed = &~/Part/Components/WeaponEmitter/Bullet/Speed
//				ShotHP = &~/Part/Components/WeaponEmitter/Bullet/Components/Targetable/Health
//				PowerPerShot = (&~/Part/Components/WeaponEmitter/AmmoUsed) / 1000
//				PowerPerSecond = 200
//				ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
//			}
//		}
//	]
}

