Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{	
	ID = SW.xx9_turbolaser_switchable
	OtherIDs = ["XX9_turbolaserr","XX92_turbolaserr","XX9_turbolaser1g","XX9_turbolaser2g"]
	NameKey = "Parts/XX9turbolaserswitchable"
	IconNameKey = "Parts/XX9turbolaserswitchableIcon"
	EditorGroup = "WeaponsEnergy"
	DescriptionKey = "Parts/XX9turbolaserswitchableDesc"
	Resources
	[
		[steel, 8] //
	]  //Cost = 34000 
	AIValueFactor = 1

	TypeCategories = [weapon, uses_power,  is_crewed]//uses_laser_parts,
	ReceivableBuffs : ^/0/ReceivableBuffs []
	Size = [4, 4]
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "turbolasers"
	MaxHealth = 42000  
	InitialPenetrationResistance = 5
	PenetrationRectType = Normal
	AutoDoorMaxPathLength = 8
	MaxDoors = 4
	AllowedDoorLocations
	[
		[-1, 2]
		[4, 2]
		[-1, 3]
		[4, 3]
		[0, 4]
		[1, 4]
		[2, 4]
		[3, 4]
	]
	EditorIcon
	{
		Texture
		{
			File = "Tower/icon_turbolaserxx9_a.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 24
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			AvailableChoices = [-1, 0, 1, 2]
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [2]
		}

		CommonReloadTimer
		{
			Type = Timer
			Duration = 4.5
			AutoStart = true
			StartTrigger = CommonReloadResetTriggerProxy
		}

		CommonOnShootEffectTimer
		{
			Type = Timer
			Duration = 0.54
			AutoStart = true
			StartTrigger = CommonReloadResetTriggerProxy
		}

		CommonReloadResetTriggerProxy
		{
			Type = TriggerProxy
			ComponentID = CommonReloadResetTrigger
		}

		SwitchWeaponCooldownProgressBar
		{
			Type = ProgressBar
			OperationalToggle = SwitchWeaponCooldownTimer
			InvertOperationalToggle = true
			ShowProgressFor = SwitchWeaponCooldownTimer
			Invert = true
			LowColor = [16, 16, 16]
			HighColor = [255, 255, 255]
		}
		SwitchWeaponCooldownTimer
		{
			Type = Timer
			Duration = 9
			AutoStart = true
			Repeats = false
			StartsOn = 0
			StartTrigger = SwitchWeaponCooldownTrigger
		}
		SwitchWeaponCooldownTrigger
		{
			Type = ModeTrigger
			Mode = MunitionType
			TriggerInModes = [0, 1, 2]
		}

		MunitionType
		{
			Type = UIToggle
			ToggleID = "SW.munition_type"
			Default =-1
			AvailableChoices = [0,2]
			AlwaysAllowInBuildMode = true
		}

		RedMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 0
		}
		BlueMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 1
		}
		GreenMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 2
		}

		RedMunitionComponents
		{
			Type = ToggledComponents
			Toggle = RedMunitionToggle
			IncludeInBlueprints = false
			Components = &<Tower/xx9_turbolaser_red.rules>/Components
		}

		GreenMunitionComponents
		{
			Type = ToggledComponents
			Toggle = GreenMunitionToggle
			IncludeInBlueprints = false
			Components = &<Tower/xx9_turbolaser_green.rules>/Components
		}

		ExteriorType
		{
			Type = UIToggle
			ToggleID = "SW.exterior_type"
			Default = -1
			ToggledOnChoices = [0,1]
			AlwaysAllowInBuildMode = true
		}
		WhiteExteriorToggle
		{
			Type = ModeToggle
			Mode = ExteriorType
			OnMode = 0
		}
		GreyExteriorToggle
		{
			Type = ModeToggle
			Mode = ExteriorType
			OnMode = 1
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 16000
		}

		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 960
			OperationalToggle = PowerToggle
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		BatteryStorageBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = BatteryStorage
			LowColor = [64, 64, 0]
			HighColor = [250, 250, 0]
			FullColor = [255, 255, 0]
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [2,2]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [4,4]
					}
					{
						File = "floor_33.png"
						Size = [4,4]
					}
					{
						File = "floor_66.png"
						Size = [4,4]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights4.png"
						Size = [2,2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"console on1.png"
							"console on2.png"
							"console on3.png"
						]
						Size = [4,4]
						AnimationInterval = 0.50
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "console off.png"
						Size = [4,4]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [4,4]
					}
					{
						File = "walls_33.png"
						Size = [4,4]
					}
					{
						File = "walls_66.png"
						Size = [4,4]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				RandomUVRotation = true
				DamageLevels
				[
					{
						File = "roof_xx9.png"
						NormalsFile = "roof_xx9_normals.png"
						Size = [4,4]
					}
					{
						File = "roof_xx9_33.png"
						NormalsFile = "roof_xx9_normals_33.png"
						Size = [4,4]
					}
					{
						File = "roof_xx9_66.png"
						NormalsFile = "roof_xx9_normals_66.png"
						Size = [4,4]
					}
				]
			}

			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				//Offset = [0, 0]
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [8, 8]
						Z = 1.45 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [192, 192, 192] // [6, 57, 113]
					}
				]
			}
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [1.55, 1.6]
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [2.45, 1.6]
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				[1.55, 1.6]
				[2.45, 1.6]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}

		BatterySprites
		{
			//ChainedTo = Turret
			//Rotation = 90d
			Type = ResourceSprites
			Location = [2,2]//0,0
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "batteries01.png"
					Size = [4,4]
				}
				{
					File = "batteries02.png"
					Size = [4,4]
				}
				{
					File = "batteries03.png"
					Size = [4,4]
				}
				{
					File = "batteries04.png"
					Size = [4,4]
				}
				{
					File = "batteries05.png"
					Size = [4,4]
				}
				{
					File = "batteries06.png"
					Size = [4,4]
				}
				{
					File = "batteries07.png"
					Size = [4,4]
				}
				{
					File = "batteries08.png"
					Size = [4,4]
				}
				{
					File = "batteries09.png"
					Size = [4,4]
				}
				{
					File = "batteries10.png"
					Size = [4,4]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational,
			Location = [2, 2]
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}


		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [2, 2]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [2, 2]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [2, 2]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [2, 2]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [2, 2]
					}
				}
			]
		}
		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [4, 4]
		}
	}
	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&~/TurretStats/Stats/PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4
	}
	
	/*
	StatsByCategory
	[
		//&~/TurretStats
		//&<tower/xx9_turbolaser_red.rules>/LaserStats
		//&<tower/xx9_turbolaser_green.rules>/LaserStats
	]
	*/
}
TurretStats
{
	NameKey = "StatCategories/Turret"
	Stats
	{
		Barrels = 2
		ROF = (&Barrels) / (&~/Part/Components/CommonReloadTimer/Duration)
		Range = (&~/BulletEmitterBase/Bullet/Range)
		Arc = deg(&~/TurretBase/FiringArc)
		TurretSpeed = deg(&~/TurretBase/RotateSpeed)
		PowerPerShot = (&Barrels) * (&~/BulletEmitterBase/ResourcesUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * (&ROF)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
	}
}
OperationalRoofLightingBase
{
	Size = [2.18, 5.0] //X(Desired Radius)+0.64(Distance between Barrels)+X=Y
	Z = 1.65 // Controls the "height" of the light for the purposes of normal mapping.
}
BulletEmitterBase
{
	Type = BulletEmitter
	OperationalToggle = IsOperational
	ChainedTo = Turret
	FireTrigger = Turret
	GetTargetFrom = Turret
	//No Location is dual barrel
	FireDelay = 0.20
	ResourceStorage = BatteryStorage
	ResourcesUsed = 480
	Bullet = &/COMMON_SHOTS/redxx9lasershot
}
TurretBase
		{
			Type = TurretWeapon
			Location = [2, 2]
			Rotation = -90d// Relative to unrotated part.
			Emitter = BulletEmitterLeft
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = 0//4.5
			FiringArc = 180d;
			RotateSpeed = 15d;
			FireThresholdAngle = 2d
			AIFirepowerRating = 3200
			TargetSearchesPerSecond = 1
			FirePermissionToggle = FirePermissionToggle
			HoldTargetAfterCancel = 0.15
			AutoTargetCrewSafetyDist = 8
			IgnoreSourceShipLowLOSChecks = true

			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}