Components
	{
		CommonReloadResetTriggerProxyProxy
		{
			Type = TriggerProxy
			ComponentID = CommonReloadResetTriggerProxy
		}
		
		WhiteExteriorToggleProxy
		{
			Type = ToggleProxy
			ComponentID = WhiteExteriorToggle
		}

		GreyExteriorToggleProxy
		{
			Type = ToggleProxy
			ComponentID = GreyExteriorToggle
		}
		
		WhiteExteriorComponents
		{
			Type = ToggledComponents
			Toggle = WhiteExteriorToggleProxy
			IncludeInBlueprints = false
			Components = &<heavy_turbolaser_white.rules>/Components
		}
		
		GreyExteriorComponents
		{
			Type = ToggledComponents
			Toggle = GreyExteriorToggleProxy
			IncludeInBlueprints = false
			Components = &<heavy_turbolaser_grey.rules>/Components
		}
		
		FirePermissionToggle
		{
			Type = MultiToggle
			Toggles = [CommonReloadTimer, SwitchWeaponCooldownTimer, FireModeToggle]
			Mode = All
		}

		Turret : &<../heavy_turbolaser_switchable.rules>/TurretBase
		{

		}

		TurretCollider
		{
			Type = CircleCollider
			ChainedTo = Turret
			Radius = 1.64 //3.28
			Density = 1.5
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = CommonReloadTimer
			Invert = true
			LowColor = [64, 0, 0]
			HighColor = [255, 0, 0]
		}

		CommonReloadResetTrigger
		{
			Type = MultiTrigger
			Triggers = [Turret]
		}

		BulletEmitterLeft : &<../heavy_turbolaser_switchable.rules>/BulletEmitterBase
		{
			Type = BulletEmitter
			Location = [3.425, -0.575]
			Bullet = &/COMMON_SHOTS/redheavylasershot
		}

		BulletEmitterRight : BulletEmitterLeft
		{
			Type = BulletEmitter
			Location = [3.425, 0.575]
		}

		ChargeEffectSound
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = Turret
			AnchorMediaEffects = true
		
			MediaEffects
			[
				&/COMMON_SOUNDS/LaserReCharge
			]
		}

		FireEffectSound
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Location = [1, 0]
			Trigger = Turret
			AnchorMediaEffects = true
	
			MediaEffects
			[
				&/COMMON_SOUNDS/TurbolaserSFX
			]
		}

		FireEffectLeft
		{
			Type = TriggeredEffects
			ChainedTo = BulletEmitterLeft
			Trigger = BulletEmitterLeft
			AnchorMediaEffects = true
	
			MediaEffects
			[
				&/COMMON_PARTICLES/LargeRedLaserShoot
			]
		}

		FireEffectRight : FireEffectLeft
		{
			ChainedTo = BulletEmitterRight
			Trigger = BulletEmitterRight
		}

		TurretGraphics
		{
			Type = Graphics
			OperationalToggle = CommonOnShootEffectTimer
			InvertOperationalToggle = true
			ChainedTo = Turret
			Location = [3.425, 0]

			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = &<../heavy_turbolaser_switchable.rules>/OperationalRoofLightingBase/Size
						Z = &<../heavy_turbolaser_switchable.rules>/OperationalRoofLightingBase/Z
						VertexColor = [255, 16, 16] // [255, 16, 120]
					}
				]
			}
		}
	}
LaserStats
{
	NameKey = "StatCategories/HeavyRedLasershot"
	Stats
	{
		ShieldDamagePerShot = &~/Components/BulletEmitterLeft/Bullet/Components/Hit/HitShield/HitEffects/0/Damage
		ShieldDamagePerSecond = (&ShieldDamagePerShot) * (&<../heavy_turbolaser_switchable.rules>/TurretStats/Stats/ROF)
		ShieldDamage = [&../ShieldDamagePerShot, &../ShieldDamagePerSecond]
		DamagePerShot = &~/Components/BulletEmitterLeft/Bullet/Components/Hit/HitOperational/HitEffects/0/Damage
		DamagePerSecond = (&DamagePerShot) * (&<../heavy_turbolaser_switchable.rules>/TurretStats/Stats/ROF)
		Damage = [&../DamagePerShot, &../DamagePerSecond]
		ShotSpeed = &~/Components/BulletEmitterLeft/Bullet/Speed
		//ShotHP = &~/Components/BulletEmitterLeft/Bullet/Components/Targetable/Health
	}
}
