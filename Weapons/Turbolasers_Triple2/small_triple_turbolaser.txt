Part : /BASE_PART
{
	NameKey = "Parts/TripleTurbolaser"
	IconNameKey = "Parts/TripleTurbolaserIcon"
	ID = SW.small_triple_turbolaser_test
	OtherIDs = ["small_triple_turbolaser_test"]
	EditorGroup = "WeaponsEnergy"
	DescriptionKey = "Parts/TripleTurbolaserDesc"
	Cost = 10000
	AIValueFactor = 1
	AIValue = (&Cost)
	TypeCategories = [weapon, uses_power, uses_laser_parts, is_crewed]
	Size = [3, 3]
	SelectionPriority = 1.0
	SelectionTypeByRotation = true
	MaxHealth = 5200
	InitialPenetrationResistance = 6
	PenetrationRectType = Normal
	AllowedDoorLocations
	[
		[1, -1]
		[-1, 1]
		[3, 1]
		[1, 3]
	]

	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components : ^/0/Components
	{
		
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
		
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		WeaponIsOperational
		{
			Type = MultiToggle
			Toggles = [IsOperational, SwitchCooldownToggle]
			Mode = All
		}

		SwitchTimerTrigger
		{
			Type = Timer
			Duration = 4
			AutoStart = true
			Repeats = false
		}
		SwitchTimerProgressBar
		{
			Type = ProgressBar
			ShowProgressFor = SwitchTimerTrigger
			Invert = true
			OperationalToggle = SwitchCooldownToggle
			InvertOperationalToggle = true
		}
		SwitchCooldownToggle
		{
			Type = TriggeredToggle
			OnTrigger = SwitchTimerTrigger
			StartsOn = false
		}	

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}

		MunitionType
		{
			Type = UIToggle
			ToggleID = "SW.munition_type"
			Default = 0
			AlwaysAllowInBuildMode = true
		}
		RedMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 0
		}
		RedMunitionComponents
		{
			Type = ToggledComponents
			Toggle = RedMunitionToggle
			IncludeInBlueprints = true
			Components = &<small_triple_turbolaser_red.txt>/Components
		}
		BlueMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 1
		}
		BlueMunitionComponents
		{
			Type = ToggledComponents
			Toggle = BlueMunitionToggle
			IncludeInBlueprints = true
			Components = &<small_triple_turbolaser_blue.txt>/Components
		}
		GreenMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 2
		}
		GreenMunitionComponents
		{
			Type = ToggledComponents
			Toggle = GreenMunitionToggle
			IncludeInBlueprints = true
			Components = &<small_triple_turbolaser_green.txt>/Components
		}

		ExteriorType
		{
			Type = UIToggle
			ToggleID = "SW.exterior_type"
			Default = 2
			ToggledOnChoices = [0,1]
			AlwaysAllowInBuildMode = true
		}
		WhiteExteriorToggle
		{
			Type = ModeToggle
			Mode = ExteriorType
			OnMode = 0
		}
		WhiteExteriorComponents
		{
			Type = ToggledComponents
			Toggle = WhiteExteriorToggle
			IncludeInBlueprints = false
			Components = &<small_triple_turbolaser_white.txt>/Components
		}
		GreyExteriorToggle
		{
			Type = ModeToggle
			Mode = ExteriorType
			OnMode = 1
		}
		GreyExteriorComponents
		{
			Type = ToggledComponents
			Toggle = GreyExteriorToggle
			IncludeInBlueprints = false
			Components = &<small_triple_turbolaser_grey.txt>/Components
		}

		Turret
		{
			Type = TurretWeapon
			Location = [1.5, 1.5]
			Rotation = -90d// Relative to unrotated part.
			OperationalToggle = WeaponIsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = 1
			FireDelay = .15
			FiringArc = 130d
			RotateSpeed = 180d
			FireThresholdAngle = 1d
			TargetSearchTriesPerFrame = 1
			AIFirepowerRating = 1600
			FirePermissionToggle = FireModeToggle
			Emitter = BulletEmitterBase
            		IgnoreSourceShipLOSChecks = true

			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		BulletEmitterBase
		{
			Type = BulletEmitter
			ChainedTo = Turret
			FireTrigger
			GetTargetFrom = Turret
			Location = [1, 0]
			OperationalToggle = IsOperational
			Bullet = &/COMMON_SHOTS/redtriplelasershot
			AmmoStorage = BatteryStorage
			AmmoUsed = 130
		}
		
		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = WeaponIsOperational
			ShowProgressFor = Turret
		}

		ChargeEffectBase
		{
			Type = TriggeredEffects
			ChainedTo = BulletEmitterBase
			Trigger = Turret
			AnchorMediaEffects = true
		
			MediaEffects
			[
				&/COMMON_SOUNDS/LaserRecharge
			]
		}

		FireEffectBase
		{
			Type = TriggeredEffects
			ChainedTo = BulletEmitterBase
			Trigger = Turret
			AnchorMediaEffects = true
	
			MediaEffects
			[
				&/COMMON_SOUNDS/TurbolaserSFX
			]
		}

		TurretCollider
		{
			Type = CircleCollider
			ChainedTo = Turret
			Radius = .8
			Density = 1.5
		}


		BatteryStorage
		{
			Type = AmmoStorage
			AmmoType = battery
			MaxAmmo = 4000
		}
		BatteryConsumer
		{
			Type = AmmoConsumer
			AmmoType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 1000
			OperatinalToggle = PowerToggle
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [1.5, 1.5]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [3, 3]
					}
					{
						File = "floor_33.png"
						Size = [3, 3]
					}
					{
						File = "floor_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [2, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"console on1.png"
							"console on2.png"
							"console on3.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.50
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "console off.png"
						Size = [2, 2]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [3, 3]
					}
					{
						File = "walls_33.png"
						Size = [3, 3]
					}
					{
						File = "walls_66.png"
						Size = [3, 3]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [3, 3]
					}
					{
						File = "roof_33.png"
						Size = [3, 3]
					}
					{
						File = "roof_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows.png"
						Size = [3, 3]
					}
					{
						File = "roof_windows_33.png"
						Size = [3, 3]
					}
					{
						File = "roof_windows_66.png"
						Size = [3, 3]
					}
				]
			}
			NonOperationalRoofWindows = &OperationalRoofWindows
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [1.05, 1.1]
			Rotation = 180d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [1.95, 1.1]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				[1.05, 1.1]
				[1.95, 1.1]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}

		BatterySprites
		{
			Type = AmmoSprites
			Location = [1.5, 1.5]
			AmmoStorage = BatteryStorage
			Layer = "doodads_high"
			AmmoLevels
			[
				{
					File = "batteries1.png"
					Size = [2, 2]
				}
				{
					File = "batteries2.png"
					Size = [2, 2]
				}
				{
					File = "batteries3.png"
					Size = [2, 2]
				}
				{
					File = "batteries4.png"
					Size = [2, 2]
				}
				{
					File = "batteries5.png"
					Size = [2, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational,
			Location = [1.5, 1.5]
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1.5, 1.5]

			FactorHitEffectsWith = BatteryStorage
			HitEffects
			[
				{
					Type = AreaDamage
					Damage = 400
					Radius = 2
					Delay = .05
					Filter
					{
						Friendlies = true
						OperationalHealth = true
						StructuralHealth = false
					}
				}
				{
					Type = AreaDamage
					Damage = 200
					Radius = 2
					Delay = .05
					Filter
					{
						Friendlies = true
						OperationalHealth = false
						StructuralHealth = true
					}
				}{
					Type = AreaFires
					FireChancePerTile = .1
					Radius = 4
					Falloff = 0
					Delay = .05
					Filter
                    {
                        Friendlies = true
                    }
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1.5, 1.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1.5, 1.5]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1.5, 1.5]
					}
				}
				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1.5, 1.5]
					}
				}
			]
		}
		BlueprintsRed
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [3, 3]

			ShowOnlyInToggleMode
			{
				ToggleID = SW.munition_type
				Mode = 0
			}
		}
		BlueprintsBlue
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [3, 3]
			ShowOnlyInToggleMode
			{
				ToggleID = SW.munition_type
				Mode = 1
			}
		}
		BlueprintsGreen
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [3, 3]
			ShowOnlyInToggleMode
			{
				ToggleID = SW.munition_type
				Mode = 2
			}
		}
		BlueprintsWhite
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [3, 3]
			ShowOnlyInToggleMode
			{
				ToggleID = SW.exterior_type
				Mode = 0
			}
		}
		BlueprintsGrey
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [3, 3]
			ShowOnlyInToggleMode
			{
				ToggleID = SW.exterior_type
				Mode = 1
			}
		}
	}

	Stats
	{
		/*CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxAmmo) / 1000

		RecPower = (&PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4

		ROF = 3 / (&<small_triple_turbolaser_red.txt>/Components/Turret/FireInterval)
		Range = &<small_triple_turbolaser_red.txt>/Components/BulletEmitterBase/Bullet/Range
		Arc = deg(&<small_triple_turbolaser_red.txt>/Components/Turret/FiringArc)
		TurretSpeed = deg(&<small_triple_turbolaser_red.txt>/Components/Turret/RotateSpeed)
		ShotSpeed = &<small_triple_turbolaser_red.txt>/Components/BulletEmitterBase/Bullet/Speed
		ShotHP = &<small_triple_turbolaser_red.txt>/Components/BulletEmitterBase/Bullet/Components/Targetable/Health
		PowerPerShot = (&<small_triple_turbolaser_red.txt>/Components/BulletEmitterBase/AmmoUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * 3 / (&<small_triple_turbolaser_red.txt>/Components/Turret/FireInterval)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]*/
	}
	StatsByCategory
	[
		&<small_triple_turbolaser_red.txt>/LaserStats
		&<small_triple_turbolaser_blue.txt>/LaserStats
		&<small_triple_turbolaser_green.txt>/LaserStats
	]

}
