/* ----------------------------------------------------------------------------

Introduction: SW:ACD 0.3.7

Author : Lafiel

Description:
Currently prototyping. Everything is temporary.

This is based on the 1st Order tower on the Supremacy.
Distance between turrets: 79.34/2242.83 = 1070 m

Versions:

 o 1.0 Cosmoteer 0.15.14

---------------------------------------------------------------------------- */ 
Part : /BASE_PART
{	
	ID = SW.turbolaser_tower_siege01
	NameKey = "Parts/TurbolaserTowerSiege01"
	IconNameKey = "Parts/TurbolaserTowerSiege01Icon"
	DescriptionKey = "Parts/TurbolaserTowerSiege01Desc"
	EditorGroup = "TechI"
	Cost = 3000000
	AIValueFactor = 1
	AIValue = (&Cost)
	TypeCategories = [weapon, uses_power, uses_laser_parts, is_crewed,siege_cannon,siege_weapon]
	RequiresCategories = [bridge1,WarRoom]
	Size = [8, 16]
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "cannons"
	MaxHealth = 128000
	InitialPenetrationResistance = 5
	PenetrationRectType = Normal

	ReceivableBuffs = [SWTurretPerimeter]


	EditorIcon
	{
		Texture
		{
			File = "icon_siege01.png"
			SampleMode = Linear
		}
		Size = [15, 92]
	}
	
	Components : ^/0/Components, &<siege01_graphics.txt>, &<turbolaser_siege01_green.txt>/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew,{Toggle=PerimeterToggle; Invert=true}]
			Mode = All
		}
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}
		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
		BatteryStorage
		{
			Type = AmmoStorage
			AmmoType = battery
			MaxAmmo = 80000
		}

		BatteryConsumer
		{
			Type = AmmoConsumer
			AmmoType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		PerimeterProvider
		{
			Type = GridBuffProvider
			BuffType = SWTurretPerimeter
			BuffAmount = 14
			GridDistance = 100
			BuffsSelf = false
			Falloff = 0.15 //0.02
			Criteria
			{
				Category = siege_cannon
				//Categories = [siege_cannon,axial_weapon]
			}
		}
		PerimeterProvider2
		{
			Type = GridBuffProvider
			BuffType = SWTurretPerimeter
			BuffAmount = 2
			GridDistance = 100 //50
			BuffsSelf = false
			Falloff = -0.3
			Criteria
			{
				Category = siege_weapon
			}
		}
		PerimeterToggle
		{
			Type = BuffToggle
			BuffType = SWTurretPerimeter
			MinBuffValue = 14
			//MaxBuffValue = 2
			//Invert = true
		}
		NotPerimeterToggle
		{
			Type = MultiToggle
			Toggles
			[
				PerimeterToggle
			]
			Mode = All
			Invert = true
		}


		FloorGraphics1
		{
			Type = Graphics
			Location = [4, 1]
			Floor
			{
				Layer = "floors"
				Offset = [-3, 0]
				DamageLevels
				[
					{
						File = "../floor06[2,2]01.png"
						Size = [2, 2]
					}
					{
						File = "../floor06[2,2]01_33.png"
						Size = [2, 2]
					}
					{
						File = "../floor06[2,2]01_66.png"
						Size = [2, 2]
					}
				]
			}
			Walls : &Floor
			{
				Offset = [-1, 0]
			}
			Roof : &Floor
			{
				Offset = [1, 0]
			}
			OperationalDoodad = &NonOperationalDoodad
			NonOperationalDoodad : &Floor
			{
				Offset = [3, 0]
			}
		}
		FloorGraphics2 : &FloorGraphics1
		{
			Location = [4, 3]
		}
		FloorGraphics3 : &FloorGraphics1
		{
			Location = [4, 5]
		}
		FloorGraphics4 : &FloorGraphics1
		{
			Location = [4, 7]
		}
		FloorGraphics5 : &FloorGraphics1
		{
			Location = [4, 9]
		}
		FloorGraphics6 : &FloorGraphics1
		{
			Location = [4, 11]
		}
		FloorGraphics7 : &FloorGraphics1
		{
			Location = [4, 13]
		}
		FloorGraphics8 : &FloorGraphics1
		{
			Location = [4, 15]
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [4, 8]
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "../Turbolasers_Light/lights.png"
						Size = [8, 16]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "../walls01[8,12].png"
						Size = [8, 16]
					}
/*
					{
						File = "../walls01[4,4]_33.png"
						Size = [4, 4]
					}
					{
						File = "../walls01[4,4]_66.png"
						Size = [4, 4]
					}
*/
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "../../Superweapons/empty_roof02[1,1].png"
						Size = [8, 16]
					}
/*
					{
						File = "../roof_turret_base02[2,2]01_33.png"
						Size = [2, 2]
					}
					{
						File = "../roof_turret_base02[2,2]01_66.png"
						Size = [2, 2]
					}
*/
				]
			}
		}

		ConsoleGraphics
		{
			Type = Graphics
			//ChainedTo = Weapon
			Location = [4, 8]
			OperationalToggle = IsOperational
			DoodadToggle = IsOperational
			ShowToggledDoodadsWhenNotOperational = true
			ToggleOnDoodad
			{
				Layer = "doodads_low"
				Offset = [-2, 0]
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../FalconLaser/console on1.png"
							"../FalconLaser/console on2.png"
							"../FalconLaser/console on3.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.5
					}
				]
			}
			ToggleOffDoodad
			{
				Layer = "doodads_low"
				Offset = [-2, 0]
				DamageLevels
				[
					{
						File = "../FalconLaser/console off.png"
						Size = [2, 2]
					}
				]
			}
			OperationalDoodad : &ToggleOnDoodad
			{
				Offset = [2, 0]
			}
			NonOperationalDoodad : &ToggleOffDoodad
			{
				Offset = [2, 0]
			}
			OperationalRoofDoodad : &ToggleOnDoodad
			{
				Offset = [-2, 2]
			}
			NonOperationalRoofDoodad : &ToggleOffDoodad
			{
				Offset = [-2, 2]
			}
			OperationalRoofWindows : &ToggleOnDoodad
			{
				Offset = [2, 2]
			}
			NonOperationalRoofWindows : &ToggleOffDoodad
			{
				Offset = [2, 2]
			}
		}


		CrewLocation
		{
			Type = CrewLocation
			Location = [1.546875, 7.59375] //-157,-26
			Rotation = 180d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [2.453125, 7.59375] //-99,-26
			Rotation = 180d
		}
		CrewLocation3
		{
			Type = CrewLocation
			Location = [6.453125, 7.59375]
			Rotation = 180d
		}
		CrewLocation4
		{
			Type = CrewLocation
			Location = [5.546875, 7.59375] //-22
			Rotation = 180d
		}
		CrewLocation5
		{
			Type = CrewLocation
			Location = [1.546875, 9.59375]
			Rotation = 180d
		}
		CrewLocation6
		{
			Type = CrewLocation
			Location = [2.453125, 9.59375]
			Rotation = 180d
		}
		CrewLocation7
		{
			Type = CrewLocation
			Location = [6.453125, 9.59375]
			Rotation = 180d
		}
		CrewLocation8
		{
			Type = CrewLocation
			Location = [5.546875, 9.59375]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 8
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				&../../CrewLocation/Location
				&../../CrewLocation2/Location
				&../../CrewLocation3/Location
				&../../CrewLocation4/Location
				&../../CrewLocation5/Location
				&../../CrewLocation6/Location
				&../../CrewLocation7/Location
				&../../CrewLocation8/Location
			]
			CrewLocations
			[
				CrewLocation
				CrewLocation2
				CrewLocation3
				CrewLocation4
				CrewLocation5
				CrewLocation6
				CrewLocation7
				CrewLocation8
			]
		}


		BatterySprites
		{
			Type = AmmoSprites
			Location = [2, 8]
			AmmoStorage = BatteryStorage
			Layer = "doodads_high"
			RangeLow = 0
			RangeHigh = 5000
			AmmoLevels
			[
				{
					File = "../FalconLaser/batteries1.png"
					Size = [2, 2]
				}
				{
					File = "../FalconLaser/batteries2.png"
					Size = [2, 2]
				}
				{
					File = "../FalconLaser/batteries3.png"
					Size = [2, 2]
				}
				{
					File = "../FalconLaser/batteries4.png"
					Size = [2, 2]
				}
				{
					File = "../FalconLaser/batteries5.png"
					Size = [2, 2]
				}
			]
		}
		BatterySprites2 : &BatterySprites
		{
			Type = AmmoSprites
			Location = [6, 8]
			AmmoStorage = BatteryStorage
			Layer = "doodads_high"
			RangeLow = 5000
			RangeHigh = 10000
		}
		BatterySprites3 : &BatterySprites
		{
			Type = AmmoSprites
			Location = [2, 10]
			AmmoStorage = BatteryStorage
			Layer = "doodads_high"
			RangeLow = 10000
			RangeHigh = 15000
		}

		BatterySprites4 : &BatterySprites
		{
			Type = AmmoSprites
			Location = [6, 10]
			AmmoStorage = BatteryStorage
			Layer = "doodads_high"
			RangeLow = 15000
			RangeHigh = 20000
		}

		BatterySprites5 : &BatterySprites
		{
			Type = AmmoSprites
			Location = [4, 6]
			AmmoStorage = BatteryStorage
			Layer = "doodads_high"
			RangeLow = 20000
			RangeHigh = 25000
		}


		OperationEffects
		{
			Type = ToggleEffects
			Location = [4, 8]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [4, 8]
			
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [4, 8]
			Layer = "indicators"
			Indicators
			[
				// Turret Perimeter
				{
					Toggle = NotPerimeterToggle
					ShowInBuildMode = true
					AtlasSprite
					{
						File = &/INDICATORS/SWMinimumDistance
						Size = [2, 2]
					}
				}
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [2, 2]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [2, 2]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [2, 2]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "../Turbolasers_Large/blueprints01.png"
			Size = [8, 8]
			Offset = [0, -4]
		}
		Blueprints2
		{
			Type = BlueprintSprite
			File = "../Turbolasers_Large/blueprints01.png"
			Size = [8, 8]
			Offset = [0, 4]
		}

	}

/*
	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxAmmo) / 1000

		RecPower = (&PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4

		ROF = 2 / (&<light_turbolaser_red.txt>/Components/Turret/FireInterval)
		Range = &<light_turbolaser_red.txt>/Components/BulletEmitterBase/Bullet/Range
		Arc = deg(&<light_turbolaser_red.txt>/Components/Turret/FiringArc)
		TurretSpeed = deg(&<light_turbolaser_red.txt>/Components/Turret/RotateSpeed)
		ShotSpeed = &<light_turbolaser_red.txt>/Components/BulletEmitterBase/Bullet/Speed
		ShotHP = &<light_turbolaser_red.txt>/Components/BulletEmitterBase/Bullet/Components/Targetable/Health
		PowerPerShot = (&<light_turbolaser_red.txt>/Components/BulletEmitterBase/AmmoUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * 2 / (&<light_turbolaser_red.txt>/Components/Turret/FireInterval)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
	}
	StatsByCategory
	[
		&<light_turbolaser_red.txt>/LaserStats
		&<light_turbolaser_blue.txt>/LaserStats
		&<light_turbolaser_green.txt>/LaserStats
	]
*/

}
