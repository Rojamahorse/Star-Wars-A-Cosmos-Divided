Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/Small1"
	IconNameKey = "Parts/Small1"
	ID = SW.bubble_generator_small_switchable
	OtherIDs = ["bubble_generator_small1","SW.bubble_generator_small1"]
	EditorGroup = "DefensesSWACD"
	DescriptionKey = "Parts/Small1Desc"
	Resources
	[
		[steel, 40]
		[coil2, 6]
	]  //Cost = 4000
	AIValueFactor = 5

	Size = [1, 1]
	SelectionPriority = 1
	SelectionTypeID = "shield_gen"
	SelectionTypeByRotation = true
	MaxHealth = 1000
	TypeCategories = [defense, uses_power]
	PenetrationRectType = Normal
	MaxDoors = 2
	AllowedDoorLocations
	[
		//[0, -1]	//top
 		[0, 1]	//bottom
		[-1, 0] //left
		[1, 0]	//right
	]
	EditorIcon
	{
		Texture
		{
			File = "ShieldGenSmall/icon.png"
			SampleMode = Linear
		}
		Size = [22.66, 22.66]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 2
			//Requires 0 Stationary Crew so
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 24000//8000
			ToggleOnResources = 16000//2000
			DrainOnFtlJump = true
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Defense_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
			DrainOnFtlJump = true
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		ProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = BatteryStorage
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}

		ProgressBar2
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			InvertOperationalToggle = true
			ShowProgressFor = BatteryStorage
			LowColor = [255, 255, 0]
			HighColor = [255, 255, 0]
			FullColor = [255, 255, 0]
		}

		PowerDrain
		{
			Type = ResourceConverter
			FromStorage = BatteryStorage
			OperationalToggle = IsOperational
			FromQuantity = 100
			Interval = 1
		}

		ShieldColorType
		{
			Type = UIToggle
			ToggleID = "SW.shield_color_type"
			Default = 0
			AvailableChoices = [0, 1, 2]
			AlwaysAllowInBuildMode = true
		}

		BlueShieldColorToggle
		{
			Type = ModeToggle
			Mode = ShieldColorType
			OnMode = 0
		}
		BlueShieldColorComponents
		{
			Type = ToggledComponents
			Toggle = BlueShieldColorToggle
			IncludeInBlueprints = true
			Components = &<shield1_blue.rules>/Components
		}

		WhiteShieldColorToggle
		{
			Type = ModeToggle
			Mode = ShieldColorType
			OnMode = 1
		}
		WhiteShieldColorComponents
		{
			Type = ToggledComponents
			Toggle = WhiteShieldColorToggle
			IncludeInBlueprints = true
			Components = &<shield1_white.rules>/Components
		}

		InvisShieldColorToggle
		{
			Type = ModeToggle
			Mode = ShieldColorType
			OnMode = 2
		}
		InvisShieldColorComponents
		{
			Type = ToggledComponents
			Toggle = InvisShieldColorToggle
			IncludeInBlueprints = true
			Components = &<shield1_invis.rules>/Components
		}

		ShieldOperationEffects
		{
			Type = ToggleEffects
			//ChainedTo = ArcShield
			Location = [0.5, 0.5]
			Toggle = IsOperational
			ToggledOnMediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./Data/Ships/terran/shield_gen_small/activate.wav"
					Volume = .5
					Speed = 1.2
					IgnoreIntensity = true
				}
			]
			ToggledOffMediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./Data/Ships/terran/shield_gen_small/deactivate.wav"
					Volume = .5
					Speed = 1.2
					IgnoreIntensity = true
				}
			]
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [0.5, 0.5]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "ShieldGenSmall/floor.png"
						Size = [1, 1]
					}
					{
						File = "ShieldGenSmall/floor_33.png"
						Size = [1, 1]
					}
					{
						File = "ShieldGenSmall/floor_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"ShieldGenSmall/doodads_on1.png"
							"ShieldGenSmall/doodads_on2.png"
							"ShieldGenSmall/doodads_on3.png"
							"ShieldGenSmall/doodads_on4.png"
							"ShieldGenSmall/doodads_on5.png"
							"ShieldGenSmall/doodads_on6.png"
							"ShieldGenSmall/doodads_on7.png"
							"ShieldGenSmall/doodads_on8.png"
							"ShieldGenSmall/doodads_on9.png"

						]
						Size = [1, 1]
						AnimationInterval = 0.3125
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "ShieldGenSmall/doodads_off.png"
						Size = [1, 1]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				Offset = [0, 0]
				DamageLevels
				[
					{
						File = "ShieldGenSmall/lights.png"
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "ShieldGenSmall/walls.png"
						Size = [1, 1]
					}
					{
						File = "ShieldGenSmall/walls_33.png"
						Size = [1, 1]
					}
					{
						File = "ShieldGenSmall/walls_66.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				RandomUVRotation = true
				DamageLevels
				[
					{
						File = "ShieldGenSmall/roof.png"
						NormalsFile = "ShieldGenSmall/roof_normals.png"
						Size = [1, 1]
					}
					{
						File = "ShieldGenSmall/roof_33.png"
						NormalsFile = "ShieldGenSmall/roof_normals_33.png"
						Size = [1, 1]
					}
					{
						File = "ShieldGenSmall/roof_66.png"
						NormalsFile = "ShieldGenSmall/roof_normals_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				Offset = [0, 0]
				DamageLevels
				[
					{
						File = "ShieldGenSmall/roof_windows.png"
						Size = [1, 1]
					}
					{
						File = "ShieldGenSmall/roof_windows_33.png"
						Size = [1, 1]
					}
					{
						File = "ShieldGenSmall/roof_windows_66.png"
						Size = [1, 1]
					}
				]
			}
			NonOperationalRoofWindows = &OperationalRoofWindows
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [0.5, 0.5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "ShieldGenSmall/batteries1.png"
					Size = [1, 1]
				}
				{
					File = "ShieldGenSmall/batteries2.png"
					Size = [1, 1]
				}
				{
					File = "ShieldGenSmall/batteries3.png"
					Size = [1, 1]
				}
				{
					File = "ShieldGenSmall/batteries4.png"
					Size = [1, 1]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational,
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [0.5, 0.5]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [0.5, 0.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [0.5, 0.5]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [0.75, 0.75]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "ShieldGenSmall/blueprints.png"
			Size = [1, 1]
		}
	}

	Stats
	{
		ShieldHP = (&~/Part/Components/BatteryStorage/MaxResources) / (&~/ShieldStatBase/ResourceDrainPerDamage)
		ShieldPenResist = &~/ShieldStatBase/PenetrationResistance/0
		ShieldArc = deg(360d)
		ShieldDist = (&~/ShieldStatBase/Radius)
		PowerUsageContinuous = (&~/Part/Components/PowerDrain/FromQuantity) / (&~/Part/Components/PowerDrain/Interval) / 1000
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&PowerUsageContinuous) + 0.5
		RecCrew = (&RecPower) * 4
	}
}
ShieldStatBase
{
	Radius = 8//9?
	Arc = 180.9d // 2 Halfs so the Texture doesn't get Strechted
	OperationalToggle = IsOperational
	DrainResourcesFrom = BatteryStorage
	Location = [0.5, 0.25]
	PenetrationResistance = [7, 0]
	ResourceDrainPerDamage = 4

	BlueprintArcSprite
	{
		Texture
		{
			File =	"./Data/ships/terran/shield_gen_small/shield_energy.png"
			UVMode = Wrap
			SampleMode = Linear
			MipLevels = 1
		}
		Size = [0, 1.5]
		Color = [50, 50, 255, 127]
	}
	BlueprintArcSpriteSegments = 64

	CoverageArcSprite
	{
		Texture
		{
			File = "./Data/ships/terran/shield_gen_small/shield_energy.png"
			UVMode = Wrap
			SampleMode = Linear
			MipLevels = 1
		}
		Size = [0, 1.5]
		Color = [255, 255, 255, 127]
	}
	CoverageArcSpriteSegments = 64
}
