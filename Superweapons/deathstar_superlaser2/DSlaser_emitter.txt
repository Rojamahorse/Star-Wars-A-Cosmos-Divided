/* ----------------------------------------------------------------------------

Introduction: SW:ACD 
DSL Railgun version

Author : Lafiel

Description:
Quick and dirty fast prototyping version, based on railgun
This part is the laser emitter. I may be connected to a DSlaser_director. 

Versions:

 o 1.0 Cosmoteer 0.15.8
   o based on ion-prism
 o 1.1 Cosmoteer 0.15.12b
   o based on ion-emitter/railgun_launcher

---------------------------------------------------------------------------- */

Part : /BASE_PART
{
	NameKey = "Parts/DSLaserEmitter"
	IconNameKey = "Parts/DSLaserEmitterIcon"
	ID = SW.DSlaser_emitter
	DescriptionKey = "Parts/DSLaserEmitterDesc"
	EditorGroup = "TechII"
	Cost = 50000
	Size = [6, 8]
	AIValue = &Cost
	PhysicalRect = [0, 1, 6, 6]
	SaveRect = &PhysicalRect
	Density = 2
	SelectionTypeID = "DSLII"
	SelectionPriority = 1
	SelectionTypeByRotation = true
	MaxHealth = 40000
	Flammable = false
	TypeCategories = [weapon, uses_power,DSLII,DSL_power,deathstarlaser_emitter]
	ProhibitAbove = 2
	ReceivableBuffs = [Railgun, DSLaserBuff, RailgunOperation]
	AllowedDoorLocations
	[
		[-1, 6]
		[-1, 7]
		[6, 5]
		[6, 6]
		[0, 8]
		[5, 8]
	]
	HasNonContiguousPathing = true
	BlockedTravelCells
	[
		[0, 1]
		[1, 1]
		[0, 2]
		[1, 2]
	]
	BlockedTravelCellDirections
	[
		{
			Key = [0, 7]
			Value = [Right]
		}
		{
			Key = [5, 7]
			Value = [Left]
		}
	]
	ExternalWallsByCell
	[
		{
			Key = [0, 1]
			Value = [TopLeft, Bottom, BottomLeft, Left]
		}
		{
			Key = [1, 1]
			Value = None
		}
		{
			Key = [2, 1]
			Value = None
		}
		{
			Key = [3, 1]
			Value = None
		}
		{
			Key = [4, 1]
			Value = None
		}
		{
			Key = [5, 1]
			Value = [TopRight, Right, BottomRight, Bottom]
		}
	]
	InternalWallsByCell
	[
		{
			Key = [0, 0]
			Value = [Left, TopLeft, Top, TopRight]
		}
		{
			Key = [1, 0]
			Value = None
		}
		{
			Key = [2, 0]
			Value = None
		}
		{
			Key = [3, 0]
			Value = None
		}
		{
			Key = [4, 0]
			Value = None
		}
		{
			Key = [5, 0]
			Value = [Right, TopRight, Top, TopLeft]
		}
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [69, 92]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, RailgunOperationBuffToggle]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

		BatteryStorage
		{
			Type = AmmoStorage
			AmmoType = battery
			MaxAmmo = 8000
		}
		BatteryConsumer
		{
			Type = AmmoConsumer
			AmmoType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		RailgunBuffToggle
		{
			Type = BuffToggle
			BuffType = Railgun
		}

		RailgunOperationBuffToggle
		{
			Type = BuffToggle
			BuffType = RailgunOperation
		}

		ShotBuffProvider
		{
			Type = SelfBuffProvider
			BuffType = DSLaserBuff
			ChainsFromBuffType = Railgun
			BuffAmount = { BaseValue=0; BuffType=Railgun; BuffMode=Add; }
		}

		ReverseOperationBuffProvider
		{
			Type = AreaBuffProvider
			BuffType = RailgunReverseOperation
			BuffArea = [0, 9, 6, 1]
			OperationalToggle = IsOperational
			Criteria
			{
				Category = DSLII
				Rot = 0
				Left = 0
				Right = 6
				Top = 9
			}
		}

		CombinedBatteryStorageProxy
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [0, 9]
			PartCriteria
			{
				Category = DSL_ammo
				Rot = 0
				Left = 0
				Right = 6
				Top = 9
			}
			ComponentID = CombinedBatteryStorage
		}

		Targetor
		{
			Type = UITargetor
			TargetorID = dsl_aim
			Weapons = [Weapon]
		}

		Weapon
		{
			Type = FixedWeapon
			Location = [3, 0]// Relative to upper-left corner of unrotated part.
			Rotation = -90d// Relative to unrotated part.
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = .2
			AIFirepowerRating = 12000

			Emitter = BeamEmitter
			TargetingEmitter = BeamEmitter
			SuppressWholeShipTargetOverlaysForPartsFilter = &FriendlyPrismFilter
			SuppressWholeShipTargetOverlaysWhenTargetingShipRelativePoints = true
			SuppressShipWideExplicitTargetsWhenTargetingPartsFilter = &FriendlyPrismFilter
			SuppressShipWideExplicitTargetsWhenTargetingShipRelativePoints = true
			SuppressDirectControlWhenTargetingPartsFilter = &FriendlyPrismFilter
			SuppressDirectControlWhenTargetingShipRelativePoints = true
			SuppressFirepowerEstimationWhenTargetingPartsFilter = &FriendlyPrismFilter
			SaveSelfTargetPartCategories = [deathstarlaser_director]
			SaveShipRelativeTargets = true
			HoldTargetAfterCancel = 3.0
			FirePermissionToggle = FireModeToggle

			FriendlyPrismFilter
			{
				Enemies = false
				Junk = false
				OnlyPartCategories = [deathstarlaser_director]
			}

			AutoTarget
			{
				TargetType = ShipParts
				Toggle = AutoTargetToggle
			}

			CoverageLine
			{
				LineSprite
				{
					Texture = &/INDICATORS/RadialGradient
					VertexColor = [255, 255, 255, 191]
					UVRect = [.5, 0, 0, 1]
				}
				LineThickness = 2

				BeginCapSprite : LineSprite
				{
					UVRect = [0, 0, .5, 1]
				}
				BeginCapSize = [1, 2]

				EndCapSprite : LineSprite
				{
					UVRect = [.5, 0, .5, 1]
				}
				EndCapSize = [1, 2]
			}
		}

		BeamEmitter : &/COMMON_SHOTS/SuperLaserBeamGreen2/SuperLaser_beam_green2
		{
			Type = BeamEmitter
			ChainedTo = Weapon
			FireTrigger = Weapon
			GetTargetFrom = Weapon
			OperationalToggle = IsOperational
			Duration = .5
			AmmoStorage = BatteryStorage
			AmmoUsed = 1000
			MinAmmoUsed = 1

			BeamMediaEffects : ^/0/BeamMediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./Data/shots/ion_beam/ion_beam_emit.wav"
					Volume = 1
					MaxConcurrent = 1
					MaxConcurrentVolume = 1
					RampUpTime = .25
					RampDownTime = .25
				}
			]
		}



/*
		Graphics
		{
			Type = Graphics
			Location = [1, 2.5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 3]
					}
					{
						File = "floor_33.png"
						Size = [2, 3]
					}
					{
						File = "floor_66.png"
						Size = [2, 3]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "weapons"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
						]
						Size = [2, 4]
						Offset = [0, -0.5]
						AnimationInterval = 0.1
						AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "weapons"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [2, 4]
						Offset = [0, -0.5]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [2, 3]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 4]
						Offset = [0, -0.5]
					}
					{
						File = "walls_33.png"
						Size = [2, 4]
						Offset = [0, -0.5]
					}
					{
						File = "walls_66.png"
						Size = [2, 4]
						Offset = [0, -0.5]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [2, 4]
						Offset = [0, -0.5]
					}
					{
						File = "roof_33.png"
						Size = [2, 4]
						Offset = [0, -0.5]
					}
					{
						File = "roof_66.png"
						Size = [2, 4]
						Offset = [0, -0.5]
					}
				]
			}
		}
*/

/*
		BatterySprites
		{
			Type = AmmoSprites
			Location = [3, 4]
			AmmoStorage = BatteryStorage
			Layer = "doodads_low"
			AmmoLevels
			[
				{
					File = "batteries1.png"
					Size = [2, 1]
				}
				{
					File = "batteries2.png"
					Size = [2, 1]
				}
				{
					File = "batteries3.png"
					Size = [2, 1]
				}
				{
					File = "batteries4.png"
					Size = [2, 1]
				}
				{
					File = "batteries5.png"
					Size = [2, 1]
				}
				{
					File = "batteries6.png"
					Size = [2, 1]
				}
				{
					File = "batteries7.png"
					Size = [2, 1]
				}
				{
					File = "batteries8.png"
					Size = [2, 1]
				}
			]
		}
*/

		OperationEffects
		{
			Type = ToggleEffects
			Location = [3, 4]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [3, 4]
		}

/*
		RecursiveDeath
		{
			Type = DeathEffects
			Location = [1, 8.5]

			HitEffects
			[
				{
					Type = AreaDamage
					Damage = 3000
					Radius = .6
					Falloff = 0
					Delay = .15
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
			]
		}
*/

		Indicators
		{
			Type = IndicatorSprites
			Location = [3, 4]
			Layer = "indicators"
			Indicators
			[
				// Missing component
				{
					Toggle = RailgunBuffToggle
					ShowInBuildMode = true
					AtlasSprite
					{
						File = &/INDICATORS/MissingComponent
						Size = [1, 1]
					}
				}

				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1.5, 1.5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [6, 8]
		}
	}

/*
	Stats
	{
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxAmmo) / 1000

		RecPower = &../StatsByCategory/0/Stats/PowerPerSecond
		RecCrew = (&RecPower) * 4
	}

	StatsByCategory
	[
		{
			NameKey = "StatCategories/BulletRailgun"
			Stats
			{
				DamagePerShot = &~/Part/Components/BulletEmitter/Bullet/Components/DamagePool/Damage/BaseValue
				DamagePerSecond = (&DamagePerShot) * (&ROF)
				Damage = [&../DamagePerShot, &../DamagePerSecond]
				Penetration = &~/Part/Components/BulletEmitter/Bullet/Components/Hit/Penetration/BaseValue
				ROF = 1 / (&~/Part/Components/Weapon/FireInterval)
				RangeLimited = [&~/Part/Components/BulletEmitter/Bullet/Range/BaseValue, &~/Part/Components/BulletEmitter/Bullet/Range/MaxValue]
				Arc = 0
				ShotSpeed = &~/Part/Components/BulletEmitter/Bullet/Speed/BaseValue
				ShotHP = &~/Part/Components/BulletEmitter/Bullet/Components/Targetable/Health
				AmmoPerShot = &~/Part/Components/BulletEmitter/AmmoUsage/0/AmmoUsed
				AmmoPerSecond = (&AmmoPerShot) * (&ROF)
				ShotAmmoUsage = [&../AmmoPerShot, &../AmmoPerSecond]
				PowerPerShot = (&~/Part/Components/BulletEmitter/AmmoUsage/1/AmmoUsed) / 1000
				PowerPerSecond = (&PowerPerShot) * (&ROF)
				ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
			}
		}
	]

	StatsNotesKey = "Stats/RailgunNotes"
*/

}
